<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: url('https://www.shutterstock.com/image-illustration/clothes-on-grunge-background-shelf-600nw-1891025299.jpg') no-repeat center center/cover; /* Change with your image */
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            overflow: hidden;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            animation: float 20s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(1deg); }
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            padding: 40px;
            width: 100%;
            max-width: 420px;
            box-shadow: 
                0 25px 50px rgba(0, 0, 0, 0.15),
                0 0 0 1px rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            position: relative;
            transform: translateY(0);
            transition: all 0.3s ease;
            animation: slideIn 0.6s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .container:hover {
            transform: translateY(-5px);
            box-shadow: 
                0 35px 70px rgba(0, 0, 0, 0.2),
                0 0 0 1px rgba(255, 255, 255, 0.3);
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .lock-icon {
            width: 60px;
            height: 60px;
            margin: 0 auto 20px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: white;
            animation: pulse 2s infinite;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .title {
            font-size: 28px;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }

        .subtitle {
            color: #6b7280;
            font-size: 16px;
            font-weight: 400;
        }

        .form-group {
            margin-bottom: 32px;
            position: relative;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .input-wrapper {
            position: relative;
        }

        .form-control {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e5e7eb;
            border-radius: 16px;
            font-size: 16px;
            background: #ffffff;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            outline: none;
            font-family: inherit;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 
                0 0 0 4px rgba(102, 126, 234, 0.1),
                0 10px 25px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .form-control:valid {
            border-color: #10b981;
        }

        .form-control.error {
            border-color: #ef4444;
            box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.1);
        }

        .error-message {
            position: absolute;
            bottom: -24px;
            left: 0;
            color: #ef4444;
            font-size: 13px;
            font-weight: 500;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }

        .error-message.show {
            opacity: 1;
            transform: translateY(0);
        }

        .submit-btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 16px;
            color: white;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
        }

        .submit-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .submit-btn:hover::before {
            left: 100%;
        }

        .submit-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 20px 40px rgba(102, 126, 234, 0.4);
        }

        .submit-btn:active {
            transform: translateY(-1px);
        }

        .alert {
            padding: 16px 20px;
            border-radius: 12px;
            margin-top: 20px;
            border-left: 4px solid;
            animation: slideInAlert 0.5s ease;
        }

        @keyframes slideInAlert {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .alert-danger {
            background: rgba(239, 68, 68, 0.1);
            border-left-color: #ef4444;
            color: #dc2626;
        }

        .footer-link {
            text-align: center;
            margin-top: 32px;
            padding-top: 32px;
            border-top: 1px solid #e5e7eb;
        }

        .footer-link p {
            color: #6b7280;
            font-size: 14px;
        }

        .footer-link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .footer-link a:hover {
            color: #764ba2;
            text-decoration: underline;
        }

        .strength-meter {
            height: 4px;
            background: #e5e7eb;
            border-radius: 2px;
            margin-top: 8px;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            width: 0%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .strength-weak { background: #ef4444; }
        .strength-medium { background: #f59e0b; }
        .strength-strong { background: #10b981; }

        @media (max-width: 480px) {
            .container {
                padding: 32px 24px;
                margin: 10px;
            }
            .title {
                font-size: 24px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="lock-icon">ðŸ”’</div>
            <h1 class="title">Change Password</h1>
            <p class="subtitle">Create a new secure password for your account</p>
        </div>

        <form method="POST" action="/reset-password-forgot" onsubmit="return validateForm()">
            <div class="form-group">
                <label for="newPass1" class="form-label">New Password</label>
                <div class="input-wrapper">
                    <input 
                        class="form-control" 
                        name="newPass1" 
                        id="newPass1" 
                        placeholder="Enter your new password" 
                        type="password" 
                        required
                        oninput="checkPasswordStrength()"
                    >
                    <div class="strength-meter">
                        <div class="strength-fill" id="strengthFill"></div>
                    </div>
                </div>
                <div id="newPass1Error" class="error-message"></div>
            </div>

            <div class="form-group">
                <label for="newPass2" class="form-label">Confirm Password</label>
                <div class="input-wrapper">
                    <input 
                        class="form-control" 
                        name="newPass2" 
                        id="newPass2" 
                        placeholder="Confirm your new password" 
                        type="password" 
                        required
                    >
                </div>
                <div id="newPass2Error" class="error-message"></div>
            </div>

            <button type="submit" class="submit-btn">
                Change Password
            </button>

            <div id="alertMessage" class="alert alert-danger" style="display: none;">
                <!-- Server messages will appear here -->
            </div>
        </form>

        <div class="footer-link">
            <p>Don't have an account? <a href="/signup">Sign up here</a></p>
        </div>
    </div>

    <script>
        function validateForm() {
            let valid = true;
            const newPass1 = document.getElementById('newPass1');
            const newPass2 = document.getElementById('newPass2');
            const newPass1Error = document.getElementById('newPass1Error');
            const newPass2Error = document.getElementById('newPass2Error');

            // Clear previous errors
            clearError(newPass1, newPass1Error);
            clearError(newPass2, newPass2Error);

            // Validate first password
            if (!newPass1.value.trim()) {
                showError(newPass1, newPass1Error, 'Password cannot be empty.');
                valid = false;
            } else if (newPass1.value.length < 6) {
                showError(newPass1, newPass1Error, 'Password must be at least 6 characters long.');
                valid = false;
            }

            // Validate second password
            if (!newPass2.value.trim()) {
                showError(newPass2, newPass2Error, 'Please re-enter your password.');
                valid = false;
            } else if (newPass2.value !== newPass1.value) {
                showError(newPass2, newPass2Error, 'Passwords do not match.');
                valid = false;
            }

            return valid;
        }

        function showError(input, errorElement, message) {
            input.classList.add('error');
            errorElement.textContent = message;
            errorElement.classList.add('show');
        }

        function clearError(input, errorElement) {
            input.classList.remove('error');
            errorElement.textContent = '';
            errorElement.classList.remove('show');
        }

        function checkPasswordStrength() {
            const password = document.getElementById('newPass1').value;
            const strengthFill = document.getElementById('strengthFill');
            
            let strength = 0;
            if (password.length >= 6) strength += 1;
            if (password.match(/[a-z]/)) strength += 1;
            if (password.match(/[A-Z]/)) strength += 1;
            if (password.match(/[0-9]/)) strength += 1;
            if (password.match(/[^A-Za-z0-9]/)) strength += 1;

            const percentage = (strength / 5) * 100;
            strengthFill.style.width = percentage + '%';

            if (strength <= 2) {
                strengthFill.className = 'strength-fill strength-weak';
            } else if (strength <= 3) {
                strengthFill.className = 'strength-fill strength-medium';
            } else {
                strengthFill.className = 'strength-fill strength-strong';
            }
        }

        // Add input event listeners for real-time validation
        document.getElementById('newPass1').addEventListener('input', function() {
            const newPass1Error = document.getElementById('newPass1Error');
            if (this.value.length >= 6) {
                clearError(this, newPass1Error);
            }
        });

        document.getElementById('newPass2').addEventListener('input', function() {
            const newPass1 = document.getElementById('newPass1');
            const newPass2Error = document.getElementById('newPass2Error');
            if (this.value === newPass1.value && this.value.length > 0) {
                clearError(this, newPass2Error);
            }
        });
    </script>
</body>
</html>