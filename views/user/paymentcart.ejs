<%- include("../../views/partials/user/header") %>

<!-- Payment Process Typography Improvements -->
<style>
  /* Payment Process Typography */
  .payment-process-container {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  .payment-process-container h1 {
    font-size: 1.75rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 1.5rem;
  }

  .payment-process-container h4 {
    font-size: 1.1rem;
    font-weight: 500;
    color: #2c3e50;
    margin-bottom: 0.75rem;
  }

  .payment-process-container h5 {
    font-size: 1rem;
    font-weight: 500;
    color: #2c3e50;
    margin-bottom: 0.5rem;
  }

  .payment-process-container h6 {
    font-size: 0.9rem;
    font-weight: 500;
    color: #34495e;
    margin-bottom: 0.5rem;
  }

  .payment-process-container p {
    font-size: 0.875rem;
    line-height: 1.4;
    color: #5a6c7d;
    margin-bottom: 0.5rem;
  }

  .payment-process-container .small {
    font-size: 0.8rem;
  }

  .payment-process-container .text-muted {
    color: #6c757d !important;
    font-size: 0.8rem;
  }

  .payment-process-container .card {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }

  .payment-process-container .card-body {
    padding: 1.25rem;
  }

  .payment-process-container .btn {
    font-size: 0.875rem;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 500;
  }

  .payment-process-container .price-text {
    font-weight: 600;
    color: #27ae60;
  }

  .payment-process-container .cart-item {
    border-bottom: 1px solid #f8f9fa;
    padding: 1rem 0;
  }

  .payment-process-container .cart-item:last-child {
    border-bottom: none;
  }

  .payment-process-container .cart-item p {
    font-size: 0.8rem;
    margin-bottom: 0.25rem;
  }

  .payment-process-container .cart-item strong {
    font-weight: 600;
    color: #2c3e50;
  }
</style>

<div class="container mt-4 mb-5 payment-process-container">
  <h1 class="text-center mb-4">Complete Your Payment</h1>
  <div class="row">
    <!-- Payment Methods -->
    <div class="col-md-7">
      <h4 class="mb-4">Choose Payment Method</h4>
      <form id="checkoutForm" action="/place-order-cart" method="POST">
        <!-- Hidden Fields -->
        <!-- Address Fields -->
        <input type="hidden" name="selected[addressType]" value="<%= selected.addressType %>">
        <input type="hidden" name="selected[name]" value="<%= selected.name %>">
        <input type="hidden" name="selected[city]" value="<%= selected.city %>">
        <input type="hidden" name="selected[landMark]" value="<%= selected.landMark %>">
        <input type="hidden" name="selected[state]" value="<%= selected.state %>">
        <input type="hidden" name="selected[pincode]" value="<%= selected.pincode %>">
        <input type="hidden" name="selected[phone]" value="<%= selected.phone %>">
        <input type="hidden" name="selected[altphone]" value="<%= selected.altphone %>">
        <input type="hidden" name="totalPrice" value="<%= orderSummary.total %>">
        <input type="hidden" name="totalDiscount" value="<%= (orderSummary.saveAmount + orderSummary.couponDiscount).toFixed(2) %>">
        <input type="hidden" name="orderType" value="cart">
        <input type="hidden" name="deliveryCharge" value="<%= orderSummary.deliveryCharge %>">

        

        <% cartItems.forEach(item => { %>
          <input type="hidden" name="cartItems[]" value="<%= item._id %>">
        <% }) %>

        <% if(orderSummary.couponId) { %>
          <input type="hidden" name="couponId" , value="<%= orderSummary.couponId %>">
          <% } %>
        <!-- Payment Options -->
        <!-- <div class="card p-3 mb-3">
          <div class="form-check">
            <input class="form-check-input" type="radio" name="paymentMethod" id="creditCard" value="credit_card" checked>
            <label class="form-check-label" for="creditCard">Credit/Debit Card</label>
          </div>
        </div>

        <div class="card p-3 mb-3">
          <div class="form-check">
            <input class="form-check-input" type="radio" name="paymentMethod" id="upi" value="upi">
            <label class="form-check-label" for="upi">UPI</label>
          </div>
        </div> -->

        <div class="card p-3 mb-3">
          <div class="form-check">
            <div class="d-flex align-items-center justify-content-between">
              
              <!-- Icon and Details (Grouped Together) -->
              <div class="d-flex align-items-center gap-3">
                <img src="https://www.yourtechstory.com/wp-content/uploads/2020/01/razorpay.png" alt="Razorpay" style="height: 32px;">
                <div>
                  <div class="fw-bold">Razorpay (Online)</div>
                  <div class="text-muted small">Pay securely with Razorpay</div>
                </div>
              </div>
              <input class="form-check-input" type="radio" name="paymentMethod" id="razorpay" value="razorpay" required/>
            </div>
          </div>
        </div>
        <%if(orderSummary.total>1000){%>
          <h5 style="color: green;">“Cash on Delivery is available only for orders up to ₹1000.”</h5>
          <%}else{%>
          <div class="card p-3 mb-3">
          <div class="form-check">
            <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cash_on_delivery">
            <label class="form-check-label" for="cod">Cash on Delivery</label>
          </div>
        </div>
        <%}%>
        <button type="submit" class="btn btn-primary mt-3">Continue</button>
      </form>
    </div>

    
    <!-- Order Summary -->
    <div class="col-md-5">
      <h4 class="mb-4">Order Summary</h4>
      <div class="card">
        <div class="card-body">
          <% cartItems.forEach(item => { %>
            <% if (item.productId) { %>
              <div class="cart-item">
                <div class="d-flex">
                  <% if (item.productId.productImages && item.productId.productImages[0]) { %>
                    <img src="<%= item.productId.productImages[0] %>" alt="Product Image" class="me-3 rounded" style="width: 60px; height: 60px; object-fit: cover;">
                  <% } else { %>
                    <img src="/uploads/product-images/default-image.png" alt="Default Product Image" class="me-3 rounded" style="width: 60px; height: 60px; object-fit: cover;">
                  <% } %>
                  <div class="flex-grow-1">
                    <h6 class="mb-1"><%= item.productId.productName %></h6>
                    <p class="text-muted">Qty: <%= item.quantity %> | Size: <%= item.variant?.size || 'Not selected' %></p>
                    <div class="d-flex align-items-center">
                      <span class="price-text me-2">₹<%= item.productId.salePrice %></span>
                      <del class="text-muted small">₹<%= item.productId.regularPrice %></del>
                    </div>
                    <p class="small"><strong>Total: ₹<%= item.totalPrice %></strong></p>
                  </div>
                </div>
              </div>
            <% } %>
          <% }) %>
        <hr>

        <div class="price-breakdown">
          <div class="d-flex justify-content-between mb-2">
            <span>Price (<%= orderSummary.quantity %> item<%= orderSummary.quantity > 1 ? 's' : '' %>)</span>
            <span>₹<%= orderSummary.originalTotal %></span>
          </div>
          
          <% if (orderSummary.saveAmount > 0) { %>
          <div class="d-flex justify-content-between mb-2">
            <span>Discount</span>
            <span class="text-success">-₹<%= orderSummary.saveAmount %></span>
          </div>
          <% } %>
          
          <% if (orderSummary.couponDiscount > 0) { %>
          <div class="d-flex justify-content-between mb-2">
            <span>Coupon Discount <% if (orderSummary.couponName) { %><small>(<%= orderSummary.couponName %>)</small><% } %></span>
            <span class="text-success">-₹<%= orderSummary.couponDiscount.toFixed(2) %></span>
          </div>
          <% } %>
          
          <div class="d-flex justify-content-between">
            <span>Delivery Charges</span>
            <% if(orderSummary.deliveryCharge > 0) { %>
              <span>₹<%= orderSummary.deliveryCharge %></span>
            <% } else { %>
              <span class="text-success">FREE</span>
            <% } %>
          </div>
          
          <hr>
          
          <div class="d-flex justify-content-between fw-bold">
            <span>Total Amount</span>
            <span>₹<%= orderSummary.total %></span>
          </div>
          
          <% if ((orderSummary.saveAmount + orderSummary.couponDiscount) > 0) { %>
          <div class="text-success mt-2">
            You save ₹<%= (orderSummary.saveAmount + orderSummary.couponDiscount).toFixed(2) %> on this order
          </div>
          <% } %>
        </div>

          <hr>

          <!-- Displaying the Address -->
          <div class="address-section">
            <h6 class="mb-2">Shipping Address</h6>
            <p class="mb-1"><strong><%= selected.name %></strong></p>
            <p class="text-muted mb-1"><%= selected.landMark %>, <%= selected.city %>, <%= selected.state %> - <%= selected.pincode %></p>
            <p class="text-muted mb-1">Phone: <%= selected.phone %></p>
            <% if (selected.altphone) { %>
              <p class="text-muted mb-0">Alt Phone: <%= selected.altphone %></p>
            <% } %>
          </div>

          <hr>
          <div class="d-flex justify-content-between">
            <span class="h6">Grand Total:</span>
            <span class="h6 price-text">₹<%= orderSummary.total %></span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.getElementById('checkoutForm').addEventListener('submit', async function(e) {
  const method = document.querySelector('input[name="paymentMethod"]:checked').value;

  if (method === 'razorpay') {
    e.preventDefault();

    const cartItems = Array.from(document.querySelectorAll('input[name="cartItems[]"]')).map(input => input.value);
    const totalPrice = document.querySelector('input[name="totalPrice"]').value;
    const couponIdInput = document.querySelector('input[name="couponId"]');
    const couponId = couponIdInput ? couponIdInput.value : null;
    const totalDiscount = document.querySelector('input[name="totalDiscount"]').value;
    const deliveryCharge = document.querySelector('input[name="deliveryCharge"]').value;

    const selected = {
      addressType: document.querySelector('input[name="selected[addressType]"]').value,
      name: document.querySelector('input[name="selected[name]"]').value,
      city: document.querySelector('input[name="selected[city]"]').value,
      landMark: document.querySelector('input[name="selected[landMark]"]').value,
      state: document.querySelector('input[name="selected[state]"]').value,
      pincode: document.querySelector('input[name="selected[pincode]"]').value,
      phone: document.querySelector('input[name="selected[phone]"]').value,
      altphone: document.querySelector('input[name="selected[altphone]"]').value
    };

    // Step 1: Create Razorpay order
    const res1 = await fetch('/create-razorpay-order-cart', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        cartItems,
        totalPrice,
        couponId : couponId || null,
        deliveryCharge,
        selected
      })
    });

    const { order_id, amount, razorpayKey } = await res1.json();

    // Step 2: Open Razorpay widget
    const options = {
      key: razorpayKey,
      amount: amount,
      currency: 'INR',
      name: 'Your Store',
      description: 'Order Payment',
      order_id: order_id,
      handler: async function (response) {
        // Step 3: Verify payment
        const res2 = await fetch('/verify-razorpay-payment-cart', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
            cartItems,
            totalPrice,
            couponId: couponId || null,
            selected,
            deliveryCharge,
            totalDiscount
          })
        });

        const data = await res2.json();
        if (data.success && data.redirect) {
          window.location.href = data.redirect;
        } else {
          window.location.href = data.redirect;
        }
      },
      prefill: {
        name: selected.name,
        contact: selected.phone
      },
      theme: {
        color: "#3399cc"
      },
      modal: {
        ondismiss: function () {
          // Handle cart payment cancellation
          console.log('Cart payment modal dismissed');
          handleCartPaymentFailure('USER_CANCELLED', 'Payment cancelled by user');
        }
      }
    };

    const rzp1 = new Razorpay(options);

    // Handle cart payment failure
    rzp1.on('payment.failed', function (response) {
      console.log('Cart payment failed:', response.error);
      handleCartPaymentFailure(
        response.error.code,
        response.error.description,
        response.error.metadata ? response.error.metadata.order_id : order_id
      );
    });

    rzp1.open();
  }
});

// Function to handle cart payment failures
function handleCartPaymentFailure(errorCode, errorDescription, razorpayOrderId = null) {
  console.log('🔴 Handling cart payment failure:', errorCode, errorDescription);

  // Get form data for cart failure handling
  const cartItems = Array.from(document.querySelectorAll('input[name="cartItems[]"]')).map(input => input.value);
  const totalPrice = document.querySelector('input[name="totalPrice"]').value;
  const couponIdInput = document.querySelector('input[name="couponId"]');
  const couponId = couponIdInput ? couponIdInput.value : null;
  const totalDiscount = document.querySelector('input[name="totalDiscount"]').value;
  const deliveryCharge = document.querySelector('input[name="deliveryCharge"]').value;

  const selected = {
    addressType: document.querySelector('input[name="selected[addressType]"]').value,
    name: document.querySelector('input[name="selected[name]"]').value,
    city: document.querySelector('input[name="selected[city]"]').value,
    landMark: document.querySelector('input[name="selected[landMark]"]').value,
    state: document.querySelector('input[name="selected[state]"]').value,
    pincode: document.querySelector('input[name="selected[pincode]"]').value,
    phone: document.querySelector('input[name="selected[phone]"]').value,
    altphone: document.querySelector('input[name="selected[altphone]"]').value
  };

  console.log('📤 Sending cart payment failure data to server...');

  fetch('/handle-payment-failure', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      razorpay_order_id: razorpayOrderId,
      error_code: errorCode,
      error_description: errorDescription,
      cartItems: cartItems,
      totalPrice: totalPrice,
      selected: selected,
      couponId: couponId,
      deliveryCharge: deliveryCharge,
      totalDiscount: totalDiscount,
      isCartOrder: true
    })
  })
  .then(response => response.json())
  .then(data => {
    console.log('📥 Cart payment failure response:', data);
    if (data.success) {
      console.log('✅ Failed cart order created, redirecting to failure page');
      window.location.href = data.redirect;
    } else {
      console.log('❌ Failed to create failed cart order, redirecting to failure page');
      window.location.href = '/order-failure';
    }
  })
  .catch(error => {
    console.error('❌ Error handling cart payment failure:', error);
    window.location.href = '/order-failure';
  });
}
</script>
<%- include("../../views/partials/user/footer") %>